-- Generated by Oracle SQL Developer Data Modeler 24.3.1.351.0831
--   at:        2025-04-25 01:33:08 CDT
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE Activity 
    ( 
     Contact_ID    NUMBER  NOT NULL , 
     Activity_Date DATE  NOT NULL , 
     Activity_Type VARCHAR2 (50)  NOT NULL , 
     Emp_ID        NUMBER (11) , 
     Notes         CLOB , 
     Activity_ID   NUMBER (5) 
    ) 
;

CREATE TABLE Contact 
    ( 
     Contact_ID        NUMBER  NOT NULL , 
     Customer_ID       NUMBER (6)  NOT NULL , 
     Contact_Email     VARCHAR2 (50)  NOT NULL , 
     Contact_Name      VARCHAR2 (100)  NOT NULL , 
     Contact_Number    NUMBER (10) , 
     Preferred_Contact VARCHAR2 (15) 
    ) 
;

ALTER TABLE Contact 
    ADD CONSTRAINT Contact_PK PRIMARY KEY ( Contact_ID ) ;

CREATE TABLE Customer 
    ( 
     Customer_ID   NUMBER (6)  NOT NULL , 
     Opp_ID        NUMBER (4) , 
     Emp_ID        NUMBER (11)  NOT NULL , 
     Company_Name  VARCHAR2 (50)  NOT NULL , 
     Signinig_Date DATE  NOT NULL 
    ) 
;
CREATE UNIQUE INDEX Customer__IDX ON Customer 
    ( 
     Opp_ID ASC 
    ) 
;

ALTER TABLE Customer 
    ADD CONSTRAINT Customer_PK PRIMARY KEY ( Customer_ID ) ;

CREATE TABLE Employee 
    ( 
     Emp_ID        NUMBER (11)  NOT NULL , 
     Emp_FirstName VARCHAR2 (20)  NOT NULL , 
     Emp_LastName  VARCHAR2 (20)  NOT NULL , 
     Emp_Email     VARCHAR2 (100)  NOT NULL , 
     Emp_Role      VARCHAR2 (50)  NOT NULL 
    ) 
;

ALTER TABLE Employee 
    ADD CONSTRAINT Employee_PK PRIMARY KEY ( Emp_ID ) ;

CREATE TABLE Invoice 
    ( 
     Order_ID       VARCHAR2 (12)  NOT NULL , 
     Payment_Status VARCHAR2 (25)  NOT NULL , 
     Invoice_Number NUMBER (5)  NOT NULL , 
     Invoice_Date   DATE  NOT NULL , 
     Due_Date       DATE  NOT NULL , 
     Amount_Due     NUMBER (11,2)  NOT NULL , 
     Notes          CLOB 
    ) 
;
CREATE UNIQUE INDEX Invoice__IDX ON Invoice 
    ( 
     Order_ID ASC 
    ) 
;

ALTER TABLE Invoice 
    ADD CONSTRAINT Invoice_PK PRIMARY KEY ( Invoice_Number ) ;

CREATE TABLE Lead 
    ( 
     Lead_ID        NUMBER (20)  NOT NULL , 
     Emp_ID         NUMBER (11)  NOT NULL , 
     Company_Name   VARCHAR2 (50)  NOT NULL , 
     Contact_Name   VARCHAR2 (100) , 
     Contact_Number NUMBER (10) , 
     Contact_Email  VARCHAR2 (50) , 
     Date_Contacted DATE , 
     Lead_Notes     CLOB 
    ) 
;

ALTER TABLE Lead 
    ADD CONSTRAINT Lead_PK PRIMARY KEY ( Lead_ID ) ;

CREATE TABLE Opportunity 
    ( 
     Opp_ID          NUMBER (4)  NOT NULL , 
     Lead_ID         NUMBER (20) , 
     Emp_ID          NUMBER (11)  NOT NULL , 
     Opp_Name        VARCHAR2 (100)  NOT NULL , 
     Opp_Status      VARCHAR2 (100)  NOT NULL , 
     Estimated_Value NUMBER (10,2)  NOT NULL , 
     Prob_Percent    NUMBER (5,2)  NOT NULL , 
     Closed_Date     DATE , 
     Created_Date    DATE  NOT NULL , 
     Notes           CLOB 
    ) 
;

ALTER TABLE Opportunity 
    ADD CONSTRAINT Opportunity_PK PRIMARY KEY ( Opp_ID ) ;

CREATE TABLE Order_Tbl 
    ( 
     Order_ID    VARCHAR2 (12)  NOT NULL , 
     Customer_ID NUMBER (6)  NOT NULL , 
     Order_Date  DATE  NOT NULL , 
     Order_Total NUMBER (10,2)  NOT NULL , 
     Status      VARCHAR2 (50)  NOT NULL 
    ) 
;

ALTER TABLE Order_Tbl 
    ADD CONSTRAINT Order_PK PRIMARY KEY ( Order_ID ) ;

CREATE TABLE Order_Line 
    ( 
     Order_ID            VARCHAR2 (12)  NOT NULL , 
     OrderLine_ID        VARCHAR2 (10)  NOT NULL , 
     Unit_Cost           NUMBER (11,2)  NOT NULL , 
     Quaintity           NUMBER (3)  NOT NULL , 
     Product_Description CLOB 
    ) 
;

ALTER TABLE Order_Line 
    ADD CONSTRAINT Order_Line_PK PRIMARY KEY ( OrderLine_ID ) ;

CREATE TABLE SupportTicket 
    ( 
     Order_ID        VARCHAR2 (12) , 
     Emp_ID          NUMBER (11) , 
     Ticket_ID       NUMBER (8)  NOT NULL , 
     Description     CLOB  NOT NULL , 
     Status          VARCHAR2 (50)  NOT NULL , 
     Subject         VARCHAR2 (75)  NOT NULL , 
     Submit_Date     DATE  NOT NULL , 
     Resoultion_Note CLOB 
    ) 
;

ALTER TABLE SupportTicket 
    ADD CONSTRAINT SupportTicket_PK PRIMARY KEY ( Ticket_ID ) ;

CREATE TABLE Task 
    ( 
     Order_ID    VARCHAR2 (12)  NOT NULL , 
     Opp_ID      NUMBER (4) , 
     Task_ID     NUMBER (7)  NOT NULL , 
     Status      VARCHAR2 (30)  NOT NULL , 
     Due_Date    DATE  NOT NULL , 
     Emp_ID      NUMBER (11)  NOT NULL , 
     Notes       CLOB , 
     Customer_ID NUMBER (5)  NOT NULL , 
     Task_Type   VARCHAR2 (100)  NOT NULL 
    ) 
;

ALTER TABLE Task 
    ADD CONSTRAINT Task_PK PRIMARY KEY ( Task_ID ) ;

ALTER TABLE Activity 
    ADD CONSTRAINT Activity_Contact_FK FOREIGN KEY 
    ( 
     Contact_ID
    ) 
    REFERENCES Contact 
    ( 
     Contact_ID
    ) 
;

ALTER TABLE Contact 
    ADD CONSTRAINT Contact_Customer_FK FOREIGN KEY 
    ( 
     Customer_ID
    ) 
    REFERENCES Customer 
    ( 
     Customer_ID
    ) 
;

ALTER TABLE Customer 
    ADD CONSTRAINT Customer_Employee_FK FOREIGN KEY 
    ( 
     Emp_ID
    ) 
    REFERENCES Employee 
    ( 
     Emp_ID
    ) 
;

ALTER TABLE Customer 
    ADD CONSTRAINT Customer_Opportunity_FK FOREIGN KEY 
    ( 
     Opp_ID
    ) 
    REFERENCES Opportunity 
    ( 
     Opp_ID
    ) 
;

ALTER TABLE Invoice 
    ADD CONSTRAINT Invoice_Order_FK FOREIGN KEY 
    ( 
     Order_ID
    ) 
    REFERENCES Order_Tbl 
    ( 
     Order_ID
    ) 
;

ALTER TABLE Lead 
    ADD CONSTRAINT Lead_Employee_FK FOREIGN KEY 
    ( 
     Emp_ID
    ) 
    REFERENCES Employee 
    ( 
     Emp_ID
    ) 
;

ALTER TABLE Opportunity 
    ADD CONSTRAINT Opportunity_Employee_FK FOREIGN KEY 
    ( 
     Emp_ID
    ) 
    REFERENCES Employee 
    ( 
     Emp_ID
    ) 
;

ALTER TABLE Opportunity 
    ADD CONSTRAINT Opportunity_Lead_FK FOREIGN KEY 
    ( 
     Lead_ID
    ) 
    REFERENCES Lead 
    ( 
     Lead_ID
    ) 
;

ALTER TABLE Order_Tbl 
    ADD CONSTRAINT Order_Customer_FK FOREIGN KEY 
    ( 
     Customer_ID
    ) 
    REFERENCES Customer 
    ( 
     Customer_ID
    ) 
;

ALTER TABLE Order_Line 
    ADD CONSTRAINT Order_Line_Order_FK FOREIGN KEY 
    ( 
     Order_ID
    ) 
    REFERENCES Order_Tbl 
    ( 
     Order_ID
    ) 
;

ALTER TABLE SupportTicket 
    ADD CONSTRAINT SupportTicket_Employee_FK FOREIGN KEY 
    ( 
     Emp_ID
    ) 
    REFERENCES Employee 
    ( 
     Emp_ID
    ) 
;

ALTER TABLE SupportTicket 
    ADD CONSTRAINT SupportTicket_Order_FK FOREIGN KEY 
    ( 
     Order_ID
    ) 
    REFERENCES Order_Tbl 
    ( 
     Order_ID
    ) 
;

ALTER TABLE Task 
    ADD CONSTRAINT Task_Opportunity_FK FOREIGN KEY 
    ( 
     Opp_ID
    ) 
    REFERENCES Opportunity 
    ( 
     Opp_ID
    ) 
;

ALTER TABLE Task 
    ADD CONSTRAINT Task_Order_FK FOREIGN KEY 
    ( 
     Order_ID
    ) 
    REFERENCES Order_Tbl 
    ( 
     Order_ID
    ) 
;

CREATE SEQUENCE Contact_Contact_ID_SEQ 
START WITH 1 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER Contact_Contact_ID_TRG 
BEFORE INSERT ON Contact 
FOR EACH ROW 
WHEN (NEW.Contact_ID IS NULL) 
BEGIN 
    :NEW.Contact_ID := Contact_Contact_ID_SEQ.NEXTVAL; 
END;
/

CREATE SEQUENCE Customer_Customer_ID_SEQ 
START WITH 1 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER Customer_Customer_ID_TRG 
BEFORE INSERT ON Customer 
FOR EACH ROW 
WHEN (NEW.Customer_ID IS NULL) 
BEGIN 
    :NEW.Customer_ID := Customer_Customer_ID_SEQ.NEXTVAL; 
END;
/

CREATE SEQUENCE Employee_Emp_ID_SEQ 
START WITH 1 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER Employee_Emp_ID_TRG 
BEFORE INSERT ON Employee 
FOR EACH ROW 
WHEN (NEW.Emp_ID IS NULL) 
BEGIN 
    :NEW.Emp_ID := Employee_Emp_ID_SEQ.NEXTVAL; 
END;
/

CREATE SEQUENCE Lead_Lead_ID_SEQ 
START WITH 1 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER Lead_Lead_ID_TRG 
BEFORE INSERT ON Lead 
FOR EACH ROW 
WHEN (NEW.Lead_ID IS NULL) 
BEGIN 
    :NEW.Lead_ID := Lead_Lead_ID_SEQ.NEXTVAL; 
END;
/

CREATE SEQUENCE Opportunity_Opp_ID_SEQ 
START WITH 1 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER Opportunity_Opp_ID_TRG 
BEFORE INSERT ON Opportunity 
FOR EACH ROW 
WHEN (NEW.Opp_ID IS NULL) 
BEGIN 
    :NEW.Opp_ID := Opportunity_Opp_ID_SEQ.NEXTVAL; 
END;
/

CREATE SEQUENCE Order_Order_ID_SEQ 
START WITH 1 
    NOCACHE 
    ORDER ;

CREATE OR REPLACE TRIGGER Order_Order_ID_TRG 
BEFORE INSERT ON Order_Tbl 
FOR EACH ROW 
WHEN (NEW.Order_ID IS NULL) 
BEGIN 
    :NEW.Order_ID := Order_Order_ID_SEQ.NEXTVAL; 
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            11
-- CREATE INDEX                             2
-- ALTER TABLE                             24
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           6
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          6
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
